<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="sap-salesdoc_output-papi-test-suite.xml" />
	<munit:test name="sap-salesdoc_output-papi-test-suite-mainTest" doc:id="c1779435-6e96-4e2b-9a71-be0f1f3b19cc" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="4365dc17-e76d-41e5-a843-e8960cee0043" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="d79da401-99d1-47b1-8611-7ae5f9759217" >
				<munit:variables >
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to sap-salesdoc_output-papi-main" doc:id="0f8bcd97-0b46-4b90-aabe-7e6df4e164f5" name="sap-salesdoc_output-papi-main"/>
		</munit:execution>
	</munit:test>
	<munit:test name="sap-salesdoc_output-papi-test-suite-consoleTest" doc:id="ee28c2be-e52c-4491-814f-b3a6ae42cd45" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="2e65b9e1-9c12-422b-952f-3e1d21d23df0" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sap-salesdoc_output-papi-console" doc:id="0da75cc3-1dc1-4b80-9170-3cd1dbb3d891" name="sap-salesdoc_output-papi-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="867155a1-d898-4462-b3ee-dd27d514a998" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="APIKIT:BAD_REQUEST" doc:id="5d8b9e07-fc48-4fc7-a146-226f8d884189" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="75790d9e-99f0-49a2-80d9-0f0c1d0ed942" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="cbe211f0-16ea-4405-ac0b-1236c4bf0ca1">
				<munit:variables>
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="781d8684-4de9-4eb3-9864-4d5704af081b" name="sap-salesdoc_output-papi-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="a74e8b37-2b92-4746-a54d-7efe61af91e5" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/badRequest.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="APIKIT:UNSUPPORTED_MEDIA_TYPE" doc:id="a8d857ed-48b5-45d7-a01d-51ddaa8b3ec0" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="326da8cc-47a3-4c8e-9c07-30c543f587e2" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="9f7795a8-eac7-48b9-9df4-fed0ecc1312e">
				<munit:variables>
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="d128d54d-785f-41d9-a024-323054950355" name="sap-salesdoc_output-papi-main"/>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="95800b06-4812-4636-b26f-ba66d4d4044f" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/unSupportedMediaType.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
<munit:test name="APIKIT:METHOD_NOT_ALLOWED" doc:id="7ce0d300-d3ea-41ab-b302-adf476702de4" expectedErrorType="APIKIT:METHOD_NOT_ALLOWED">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="ff0a1b72-3c22-4c6d-9071-b60ab660eb3f" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="f44b6a90-93c8-4285-920f-9d8e3c6ccdaf">
				<munit:variables>
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="ff928321-80cf-4887-867a-b738c9f08844" name="sap-salesdoc_output-papi-main"/>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="0bcb918c-e559-462a-b32b-5cf9471e6271" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/methodNotAllowed.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
<munit:test name="APIKIT:NOT_ACCEPTABLE" doc:id="ee987cc6-0b5c-45d2-a761-786652504e09" expectedErrorType="APIKIT:NOT_ACCEPTABLE">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="7c97c322-d3cd-4e1d-a849-a8169834157d" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="d434f212-d4b9-49a9-9484-460abd2143f0">
				<munit:variables>
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="416145c0-a446-4207-ad46-b5ca9e113df9" name="sap-salesdoc_output-papi-main"/>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="e410f08c-0901-4856-90ac-7a2ca043646b" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/notAcceptable.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
<munit:test name="APIKIT:NOT_FOUND" doc:id="5ec9ad66-0662-438c-93eb-f79dc8f404fb" expectedErrorType="APIKIT:NOT_FOUND">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="654f0728-2dd5-40b2-a4ae-9b5ddf00c35c" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="803c801d-5aaf-4aa2-83fb-aa0eaa9d71aa">
				<munit:variables>
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="3f0f212f-6dc2-49ee-8f54-a3c37128ec14" name="sap-salesdoc_output-papi-main"/>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="53e00ba9-3e0e-41c0-883f-b0b5a29a120c" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/notFound.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
<munit:test name="APIKIT:NOT_IMPLEMENTED" doc:id="6f82e60e-039b-4439-bf2f-a6da158d10b1" expectedErrorType="APIKIT:NOT_IMPLEMENTED">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="6347ba47-3db6-44ec-87db-ff512182a954" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="fcdf6fa9-2b82-4409-ae9a-07c4a786dbad">
				<munit:variables>
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="e62c6f63-9bc1-40d9-bdc7-f03f8216253d" name="sap-salesdoc_output-papi-main"/>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="7488b144-500d-45d4-a9e1-f56d9088a44f" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/notImplemented.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
<munit:test name="HTTP:FORBIDDEN" doc:id="eaa73604-cbd2-47e0-a200-33e3caa54744" expectedErrorType="HTTP:FORBIDDEN">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="95e8cd91-61b5-4c23-86d4-c3f61ba2ff94" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:FORBIDDEN" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="47cc09cb-be41-46b4-96ef-6cc27fcccf93">
				<munit:variables>
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="c17ece87-2880-4365-9ea3-8724dad8d4a4" name="sap-salesdoc_output-papi-main"/>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="75ce819a-d9ad-4858-acf3-d0c5ca9d3461" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/forbidden.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
 <munit:test name="HTTP:INTERNAL_SERVER_ERROR" doc:id="dc199791-9113-4802-9e57-67a7a88b4993" expectedErrorType="HTTP:INTERNAL_SERVER_ERROR">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="3e751304-d513-45aa-8b54-c35c0deaf64c" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			

</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="4bbb8319-b7bb-4db3-9f39-ebc80b0d8fd0">
				<munit:variables>
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="f899350d-d766-4dd4-b7f2-1e0d21116393" name="sap-salesdoc_output-papi-main"/>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="35ad029b-b802-4e36-91af-520b614566ea" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/serverError.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
 <munit:test name="HTTP:UNAUTHORIZED" doc:id="6197de6e-d506-4a73-ace7-8083f3fdddda" expectedErrorType="HTTP:UNAUTHORIZED">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="d317663c-c0e1-49b1-9741-e12d421c8c7b" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:UNAUTHORIZED" />
				</munit-tools:then-return>
			

</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="0dc36319-e02f-41ad-8e8c-cd11e4f31eae">
				<munit:variables>
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="09017a01-ff6e-4686-8022-e5e64b18fe2d" name="sap-salesdoc_output-papi-main"/>
		
</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="d7ef68de-147c-4ed3-950d-c3d861468d42" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/unAuthorized.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="sap-salesdoc_output-papi-test-suite-post:\salesdoc_output:application\json:sap-salesdoc_output-papi-configTest" doc:id="b494cb0f-e3d1-4327-8a36-a1e74bdb4447" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="eebff6c7-aff7-4385-bc64-0ff1155fa688" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2ef90afc-0cf9-4ee8-8c99-ac64ab7842ae" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/xml  --- readUrl('classpath://MunitFiles/sapiResponse.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="0c59973c-ecd2-431c-82d9-ac2e88b3bad3" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://MunitFiles/request.dwl')]" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\salesdoc_output:application\json:sap-salesdoc_output-papi-config" doc:id="247efcfd-7736-4990-833d-2ca5ce49ba4f" name="post:\salesdoc_output:application\json:sap-salesdoc_output-papi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="4760e7c8-3782-4d87-a2ae-ea9338daaac0" expression="#[payload]" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/response.dwl'))]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="SAP:CONNECTIVITY" doc:id="704feccd-be91-4b69-9b0e-2b58d86b65b4" expectedErrorType="SAP:CONNECTIVITY" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="2224dca0-e427-424d-aa7a-d6550e7d2e79" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="SAP:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="0ddb35c5-a453-4546-b278-17ff6a401c0b" >
				<munit:variables >
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="debdbe2b-2773-4688-8caa-8393f9f86f12" name="sap-salesdoc_output-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="12ceb2fa-85bf-42d6-bc16-d1f6696dd193" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/connectivity.dwl'))]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="SAP:INVALID_CACHE" doc:id="ddfdebbf-7211-4e7a-a35e-5137ca89dd87" expectedErrorType="SAP:INVALID_CACHE" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="8ed60131-9f80-4aa8-bc3d-18ccf29c6df6" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="SAP:INVALID_CACHE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="1b9baaa7-c073-4216-b352-497e42cdab8a" >
				<munit:variables >
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="013c4c1a-3292-4dd5-bf43-ed7361aac027" name="sap-salesdoc_output-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="b317d3df-51b4-4c27-be06-d8289b0e72ac" expression="#[payload]" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/invalidCache.dwl'))]" />
		</munit:validation>
	</munit:test>
	<munit:test name="SAP:INVALID_INPUT" doc:id="5e48ce19-d833-4707-93f9-a611ed4f4a8e" expectedErrorType="SAP:INVALID_INPUT" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="22840b17-eb0f-4dc1-92b5-ab699be0156e" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="sap-salesdoc_output-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="SAP:INVALID_INPUT" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="f66bfeb9-1a38-4832-b8f2-d2fa976fb536" >
				<munit:variables >
					<munit:variable key="httpMethod" value='"POST"' />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="Flow Reference" doc:id="22477a3e-6b44-4b70-abf6-5bfa4a4487d4" name="sap-salesdoc_output-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="3acd0b2c-3116-4e57-8a34-c6ed54f9cfe0" expression="#[payload]" is="#[MunitTools::equalTo(readUrl('classpath://MunitFiles/invalidInput.dwl'))]" />
		</munit:validation>
	</munit:test>
 

</mule>
